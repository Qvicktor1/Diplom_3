{"name": "Checking increase of the counters", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6FC0CEEA2+31554]\n\t(No symbol) [0x00007FF6FC047ED9]\n\t(No symbol) [0x00007FF6FBF0872A]\n\t(No symbol) [0x00007FF6FBF58434]\n\t(No symbol) [0x00007FF6FBF5853C]\n\t(No symbol) [0x00007FF6FBF9F6A7]\n\t(No symbol) [0x00007FF6FBF7D06F]\n\t(No symbol) [0x00007FF6FBF9C977]\n\t(No symbol) [0x00007FF6FBF7CDD3]\n\t(No symbol) [0x00007FF6FBF4A33B]\n\t(No symbol) [0x00007FF6FBF4AED1]\n\tGetHandleVerifier [0x00007FF6FC3D8B1D+3217341]\n\tGetHandleVerifier [0x00007FF6FC425AE3+3532675]\n\tGetHandleVerifier [0x00007FF6FC41B0E0+3489152]\n\tGetHandleVerifier [0x00007FF6FC17E776+750614]\n\t(No symbol) [0x00007FF6FC05375F]\n\t(No symbol) [0x00007FF6FC04EB14]\n\t(No symbol) [0x00007FF6FC04ECA2]\n\t(No symbol) [0x00007FF6FC03E16F]\n\tBaseThreadInitThunk [0x00007FFFE0547344+20]\n\tRtlUserThreadStart [0x00007FFFE075CC91+33]", "trace": "self = <tests.test_feed.TestFeed object at 0x000001E03D754350>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ffe9269abc55d91898672ddc32678505\")>, create_user = 'hwdkisxlig@ya.ru', sign_in = None\ncounter = ('xpath', \".//p[text()='Выполнено за все время:']/../p[@class='OrderFeed_number__2MbrQ text text_type_digits-large']\"), description = 'Completed for all time'\n\n    @allure.title('Checking increase of the counters')\n    @allure.description('Parametrized test which checks that creating a new order increases the counters')\n    @pytest.mark.parametrize('counter, description', CommonData.counters)\n    def test_increase_completed_counters(self, driver, create_user, sign_in, counter, description):\n        main_page = MainPage(driver)\n        main_page.click_element(Mpl.feed_button_header)\n        feed_page = FeedPage(driver)\n>       counter_prior_order = feed_page.get_text_element(counter)\n\ntests\\test_feed.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_page.py:27: in get_text_element\n    return WebDriverWait(self.driver, 10).until(ec.visibility_of_element_located(locator)).text\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ffe9269abc55d91898672ddc32678505\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x000001E03D790900>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6FC0CEEA2+31554]\nE       \t(No symbol) [0x00007FF6FC047ED9]\nE       \t(No symbol) [0x00007FF6FBF0872A]\nE       \t(No symbol) [0x00007FF6FBF58434]\nE       \t(No symbol) [0x00007FF6FBF5853C]\nE       \t(No symbol) [0x00007FF6FBF9F6A7]\nE       \t(No symbol) [0x00007FF6FBF7D06F]\nE       \t(No symbol) [0x00007FF6FBF9C977]\nE       \t(No symbol) [0x00007FF6FBF7CDD3]\nE       \t(No symbol) [0x00007FF6FBF4A33B]\nE       \t(No symbol) [0x00007FF6FBF4AED1]\nE       \tGetHandleVerifier [0x00007FF6FC3D8B1D+3217341]\nE       \tGetHandleVerifier [0x00007FF6FC425AE3+3532675]\nE       \tGetHandleVerifier [0x00007FF6FC41B0E0+3489152]\nE       \tGetHandleVerifier [0x00007FF6FC17E776+750614]\nE       \t(No symbol) [0x00007FF6FC05375F]\nE       \t(No symbol) [0x00007FF6FC04EB14]\nE       \t(No symbol) [0x00007FF6FC04ECA2]\nE       \t(No symbol) [0x00007FF6FC03E16F]\nE       \tBaseThreadInitThunk [0x00007FFFE0547344+20]\nE       \tRtlUserThreadStart [0x00007FFFE075CC91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "Parametrized test which checks that creating a new order increases the counters", "steps": [{"name": "Clicking on the specified element", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \".//a[@href='/feed']\")"}], "start": 1719767150595, "stop": 1719767150624}, {"name": "Returning text of the specified element", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6FC0CEEA2+31554]\n\t(No symbol) [0x00007FF6FC047ED9]\n\t(No symbol) [0x00007FF6FBF0872A]\n\t(No symbol) [0x00007FF6FBF58434]\n\t(No symbol) [0x00007FF6FBF5853C]\n\t(No symbol) [0x00007FF6FBF9F6A7]\n\t(No symbol) [0x00007FF6FBF7D06F]\n\t(No symbol) [0x00007FF6FBF9C977]\n\t(No symbol) [0x00007FF6FBF7CDD3]\n\t(No symbol) [0x00007FF6FBF4A33B]\n\t(No symbol) [0x00007FF6FBF4AED1]\n\tGetHandleVerifier [0x00007FF6FC3D8B1D+3217341]\n\tGetHandleVerifier [0x00007FF6FC425AE3+3532675]\n\tGetHandleVerifier [0x00007FF6FC41B0E0+3489152]\n\tGetHandleVerifier [0x00007FF6FC17E776+750614]\n\t(No symbol) [0x00007FF6FC05375F]\n\t(No symbol) [0x00007FF6FC04EB14]\n\t(No symbol) [0x00007FF6FC04ECA2]\n\t(No symbol) [0x00007FF6FC03E16F]\n\tBaseThreadInitThunk [0x00007FFFE0547344+20]\n\tRtlUserThreadStart [0x00007FFFE075CC91+33]\n\n", "trace": "  File \"C:\\Users\\Apaxuc\\PycharmProjects\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\Apaxuc\\PycharmProjects\\Diplom\\Diplom_3\\pages\\base_page.py\", line 27, in get_text_element\n    return WebDriverWait(self.driver, 10).until(ec.visibility_of_element_located(locator)).text\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Apaxuc\\PycharmProjects\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "('xpath', \".//p[text()='Выполнено за все время:']/../p[@class='OrderFeed_number__2MbrQ text text_type_digits-large']\")"}], "start": 1719767150624, "stop": 1719767160755}], "parameters": [{"name": "driver", "value": "'chrome'"}, {"name": "counter", "value": "('xpath', \".//p[text()='Выполнено за все время:']/../p[@class='OrderFeed_number__2MbrQ text text_type_digits-large']\")"}, {"name": "description", "value": "'Completed for all time'"}], "start": 1719767150594, "stop": 1719767160755, "uuid": "48259065-f1a6-43ff-bfe1-d58e49a8905e", "historyId": "53add05902df40381968524cd1d8bbcc", "testCaseId": "f7b596b4bdfaf4f8b050da108f1340f0", "fullName": "tests.test_feed.TestFeed#test_increase_completed_counters", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_feed"}, {"name": "subSuite", "value": "TestFeed"}, {"name": "host", "value": "DESKTOP-4KK18J8"}, {"name": "thread", "value": "21740-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_feed"}]}